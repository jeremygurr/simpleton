#!/bin/bash

type -t dna_move >/dev/null && return 0

dna_move() {

local from=$1; shift
local to=$1

if [[ ${to} != ${to%/} ]]; then
  to=$to${from##*/}
fi

local real_from=$(realpath $from)
to=$(realpath $to)

trace $log_info "Moving ${real_from##*/work/} to ${to##*/work/}"
begin_function

  if [[ -L $from ]]; then
    err "From cube ($from) is a link. It doesn't make sense to use this command on a link."
    err "Just use the mv command for this."
    fail1
  fi

  # if [[ ! -f $from/cube-context ]]; then
  #   err "Source cube is invalid: $from"
  #   err "Either it is not a cube, or the folder doesn't exist"
  #   fail1
  # fi

  if [[ -e $to ]]; then
    err "Target already exists: $to"
    fail1
  fi

  local workspace=${real_from##*/work/}
  if [[ "$workspace" == "$real_from" ]]; then
    err "File doesn't exist in a workspace"
    err "One of it's parent folders must be 'work'"
    fail1
  fi
  workspace=${real_from%/$workspace}

  local link
  begin_for link in $(find $workspace -type l); doo
    local real=$(realpath -L $link)
    if [[ ! -e $real ]]; then
      trace $log_info "Broken link: $link -> $real. Removing..."
      rm $link || fail
      continue
    fi
    if [[ "$real/" =~ ^$real_from/ ]]; then
      maybe rm $link || fail
      if [[ ${real##*/} == ${link##*/} && ${to##*/} != ${link##*/} ]]; then
        link=${link%/*}/${to##*/}
      fi
      maybe ln -sf $to $link || fail
    fi
  end_for

  maybe mv $real_from $to || fail

end_function
handle_return

}
