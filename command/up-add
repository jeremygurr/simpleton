#!/usr/bin/env bash

up_add_command() {
  begin_function

    local choices=${choices:-${choice:-}} name=${name:-}

    load_branch_info || fail
    find_seed_path $cell_path || fail
    local dna_path=$cell_path/.dna

    if [[ ! "$choices" ]]; then
      log_fatal "You must specify which cells to provide as choices with the choices var"
      fail1
    fi

    local before
    if [[ ! "$name" ]]; then
      if [[ "$choices" == *\ * ]]; then
        log_fatal "You must specify the name of the upstream to add with the name var if you include more than one choice"
        fail1
      fi
      choices=${choices%/}
      name=${choices#/*/*/}
      name=${name//\//-}
    fi

    local multiple_choices=f
    if [[ "$choices" == *\ * ]]; then
      multiple_choices=t
    fi

    local upstream=$dna_path/up/$name

    if [[ -e $upstream ]]; then
      log_fatal "An upstream already exists with this name: $name"
      fail1
    fi

    if [[ $multiple_choices == t ]]; then

      mkdir -p $upstream/choices || fail

      begin_for choice in $choices; doo
        choice=$(realpath $choice)
        if [[ ! -d $choice/.dna ]]; then
          log_fatal "$choice doesn't exist or is not a cell"
          fail1
        fi
        before=${choice%/*/*/*}
        local target=${choice#$before/}
        target=${target//\//-}
        safe_link $choice $upstream/choices/$target || fail
      end_for

    else
      mkdir -p ${upstream%/*} || fail
      choice=$(realpath $choices)
      if [[ ! -d $choice/.dna ]]; then
        log_fatal "$choice doesn't exist or is not a cell"
        fail1
      fi
      safe_link $choice $upstream || fail
    fi

    command_successful=t

  end_function
  handle_return
}

