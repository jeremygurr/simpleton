#!/usr/bin/env bash

select_upstream() {
  local starting_folder=$1
  begin_function

    echo "Choose upstream to remove."

    walk_init || fail

    show_selection() {
      local extra=
      if [[ -f $current_selection/.member ]]; then
        extra=" $(<$current_selection/.member)"
        if (( ${#extra} > 60 )); then
          extra=" ${extra:0:60}..."
        fi
      fi

      local highlight=$'\033[1;33m' \
        reset=$'\033[0m'
      echo "$highlight$hbar_equals$NL$(short_path $current_selection)$reset$extra"
    }

    adjust_choices() {
      walk_add_dirs $current_selection || return 1
      return 0
    }

    handle_walk_responses() {
      if [[ -d "$response" ]]; then
        current_selection="$response"
      fi
    }

    local result= \
      prompt="Choose an upstream cell (press enter to accept current choice): " \

    walk_execute $starting_folder || fail
    if [[ "$result" ]]; then
      upstream=$result
    else 
      fail1
    fi

  end_function
  handle_return
}

up_rm_command() {
  begin_function

    local upstream_to_remove=${upstream_to_remove:-${upstream:-${p_up:-}}} upstream

    if [[ ! "$upstream_to_remove" ]]; then
      select_upstream $cell_path/.dna/up || fail
      upstream_to_remove=$upstream
    fi

    if [[ ! "$upstream_to_remove" ]]; then
      log_fatal "You must specify which upstream to remove"
      fail1
    fi

    if [[ -d "$upstream_to_remove" ]]; then
      rm -r "$upstream_to_remove" || fail
      remove_empty_parents "${upstream_to_remove%/*}" || fail
      log_info "Upstream has been removed."
    else
      log_warn "Upstream has already been removed."
    fi

    command_successful=t

  end_function
  handle_return
}

