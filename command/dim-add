#!/usr/bin/env bash

dim_add_find_shared_dim() {
  while [[ ${#d} -gt 3 ]]; do
    if [[ -d $d/.dna/shared/dim ]]; then
      shared_dim_folder=$d/.dna/shared/dim
      break
    fi
    d=${d%/*}
  done
}

dim_add_choose_dim() {
  begin_function
    if [[ "$shared_dim_folder" ]]; then
      echo "Choose a dim to add to this cell:" >&2
      echo "(to create a new one, you'll need to specify the dim parameter directly)" >&2
      local PS3="dim: " 
      select dims in \
        $(find $shared_dim_folder -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort)
        do break; done
      if [[ ! "$dims" ]]; then
        log_fatal "Invalid dim selected"
        fail1
      fi
    else
      log_fatal "Must specify a dim parameter containing the dim to add."
      fail1
    fi
  end_function
  handle_return
}

dim_add_command() {
  begin_function
    local shared_dim_folder= d=$cell_path
    setup_cell_path_vars $cell_path || fail

    dim_add_find_shared_dim

    local dims=${dims:-${dim:-}} dim
    if [[ ! "${dim:-}" ]]; then
      dim_add_choose_dim || fail
    fi

    begin_for dim in $dims; doo

      log_info "Adding dim $dim"

      if [[ -d $shared_dim_folder/$dim ]]; then
        local dim_name= head_part tail_part file base_dim
        base_dim=${dim%%-*}
        if [[ -e $seed_path/.dna/${base_dim}_ || -e $seed_path/$base_dim:all ]]; then
          log_fatal "Dim $dim has already been added to this cell"
          fail1
        fi
        mkdir -p $seed_path/$base_dim:all/.dna || fail
        safe_link $seed_path/.dna/* $seed_path/$base_dim:all/.dna/ || fail
        safe_link $shared_dim_folder/$dim $seed_path/.dna/${base_dim}_ || fail

        log_info "Added $dim_name"
      else
        log_fatal "Dim not found: $dim in $shared_dim_folder"
        log_fatal "You can run this command without specifying dim to get a list of options"
        fail1
      fi

    end_for

    command_successful=t
  end_function
  handle_return
}

