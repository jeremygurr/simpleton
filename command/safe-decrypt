#!/usr/bin/env bash

safe_decrypt_command() {
  begin_function

    local seed_path=${seed_path:-} \
      user=${user:-${USER:-}} \
      cell_path=${cell_path:-} \
      user_private_key=${user_private_key:-~/.ssh/id_rsa} \
      from_file=${from_file:-} \
      to_file=${to_file:-} \

    if [[ ! "${from_file:-}" ]]; then
      log_fatal "from_file not specified. It must contain the path to the file to decrypt."
      fail1
    fi

    if [[ ! "${to_file:-}" ]]; then
      if [[ $to_file == *.safe ]]; then
        to_file=${from_file%.safe}
      else
        log_fatal "to_file not specified. It must contain the target path of the decrypted file."
        fail1
      fi
    fi

    if [[ ! "${seed_path:-}" ]]; then
      load_branch_info || fail
      find_seed_path $cell_path || fail
    else
      cell_path=/work${seed_path#/seed}
    fi

    if [[ ! "${seed_path:-}" || ! -e $seed_path ]]; then
      log_fatal "Couldn't find seed path. You must either run this command in a work cell, or in a seed cell"
      fail1
    fi

    local key_path
    get_key_path || fail
    validate_user_key $key_path/$user.key || fail

    if [[ ! "${tmp_path:-}" ]]; then
      log_fatal "Internal error: tmp_path has not been set"
      fail1
    fi

    if [[ ! -e $tmp_path ]]; then
      mkdir -p $tmp_path || fail
    fi

    local mk_path=$tmp_path/mk
    defer "rm $mk_path"
    extract_master_key $key_path/$user.key $mk_path || fail

    master_key=$mk_path \
    simple_decrypt $from_file $to_file ||fail

    log_info "Successfully decrypted file $from_file to $to_file"

    command_successful=t

  end_function

  handle_return
}

