#!/usr/bin/env bash

dim_rm_delete_branch() {
  begin_function

    local seed=$1 branch branch_dim
    local branches=$(find1 $seed -name "*:*" | sort -g) || fail

    begin_for branch in $branches; doo
      branch_dim=${branch##*/}
      branch_dim=${branch_dim%%:*}
      if [[ $dim == $branch_dim ]]; then
        local to_move=( $branch/!(*.dna) )
        to_move=${to_move[*]}
        if [[ "${to_move:-}" ]]; then
          mv $to_move $seed/ || fail
        fi
        rm -r $branch || fail
        did_something=t
      else
        dim_rm_delete_branch $branch || fail
      fi
    end_for

  end_function
  handle_return
}

dim_rm_delete_vars() {
  begin_function
    begin_for p in $trunk_dims_path $props_path $sub_dims_path; doo
      if [[ -d $p ]]; then
        local dim_folder=$(find1 $p -regex ".*/\([0-9]+-\)?$dim") || fail
        if [[ "$dim_folder" ]]; then
          rm -rf $dim_folder || fail
          did_something=t
        fi
      fi
    end_for
  end_function
  handle_return
}

dim_rm_choose_dim() {
  begin_function
    local choices= found
    begin_for p in $trunk_dims_path $props_path $sub_dims_path; doo
      if [[ -d $p ]]; then
        found=$(find1 $p -type d | sort -g)
        local f
        begin_for f in $found; doo
          f=${f##*/}
          f=${f#+([0-9])-}
          choices+="$f$NL" || fail
        end_for
      fi
    end_for

    if [[ ! "$choices" ]]; then
      log_fatal "No dims defined for this cell"
      fail1
    fi

    choices=$(echo "$choices" | sort)
    
    local choice path

    echo "Choose a dim to remove from this cell:" >&2
    local PS3="dim: " 
    choose dims $choices
    if [[ ! "$dims" ]]; then
      log_fatal "Invalid dim selected"
      fail1
    fi

  end_function
  handle_return
}

dim_rm_command() {
  begin_function

    local seed_path trunk_seed_path
    setup_cell_path_vars $cell_path || fail
    find_seed_path $cell_path || fail
    trunk_seed_path=$seed_path

    local trunk_dims_path=$seed_path/.dna/trunk_dims \
      props_path=$seed_path/.dna/props \
      sub_dims_path=$seed_path/.dna/sub_dims

    local dims=${dims:-${dim:-}} dim dim_path
    if [[ ! "${dims:-}" ]]; then
      dim_rm_choose_dim || fail
    fi

    local did_something=f
    begin_for dim in $dims; doo
      dim_rm_delete_branch $seed_path || fail
      dim_rm_delete_vars || fail
    end_for

    if [[ $did_something == f ]]; then
      log_info "Nothing to be done."
    fi

    command_successful=t

  end_function
  handle_return
}

